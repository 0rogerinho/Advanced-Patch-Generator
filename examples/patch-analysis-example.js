#!/usr/bin/env node

/**
 * Exemplo de An√°lise de Patches
 * Demonstra como usar o PatchAnalyzer para analisar patches com diferentes n√≠veis de compress√£o
 */

import { PatchAnalyzer } from '../src/index.js';
import path from 'path';

async function runPatchAnalysis() {
  try {
    console.log('üî¨ Iniciando An√°lise de Patches Avan√ßada...\n');

    // Configura√ß√£o do analisador
    const analyzer = new PatchAnalyzer({
      showProgress: true,
      includeUncompressed: true,
      compressionLevels: [0, 1, 3, 6, 9] // Testa diferentes n√≠veis
    });

    // Caminhos dos arquivos (usando os arquivos de exemplo do projeto)
    const oldFile = path.join(process.cwd(), 'files/old/exemplo.txt');
    const newFile = path.join(process.cwd(), 'files/new/exemplo.txt');
    const outputDir = path.join(process.cwd(), 'files/patches/analysis');

    console.log('üìÅ Arquivos para an√°lise:');
    console.log(`   Original: ${oldFile}`);
    console.log(`   Novo:     ${newFile}`);
    console.log(`   Sa√≠da:    ${outputDir}\n`);

    // Executa a an√°lise
    const results = await analyzer.analyzePatch(oldFile, newFile, outputDir);

    // Exibe os resultados de forma bonita
    PatchAnalyzer.displayAnalysisResults(results);

    // Informa√ß√µes adicionais
    console.log('\nüí° RECOMENDA√á√ïES:');
    console.log('‚îÄ'.repeat(50));
    
    if (results.summary.bestCompression) {
      const best = results.summary.bestCompression;
      console.log(`   üéØ Melhor op√ß√£o: N√≠vel ${best.compressionLevel === -1 ? 'Sem compress√£o' : best.compressionLevel}`);
      console.log(`   üìä Taxa de compress√£o: ${best.compressionRatio}%`);
      console.log(`   ‚ö° Tempo de gera√ß√£o: ${best.durationFormatted}`);
    }

    if (results.summary.worstCompression && results.summary.worstCompression !== results.summary.bestCompression) {
      const worst = results.summary.worstCompression;
      console.log(`   ‚ö†Ô∏è  Evitar: N√≠vel ${worst.compressionLevel === -1 ? 'Sem compress√£o' : worst.compressionLevel}`);
      console.log(`   üìä Taxa de compress√£o: ${worst.compressionRatio}%`);
    }

    console.log('\nüìÅ Patches gerados em:', outputDir);
    console.log('   Voc√™ pode usar qualquer um dos patches gerados para aplicar as mudan√ßas.');

  } catch (error) {
    console.error('\n‚ùå Erro durante a an√°lise:', error.message);
    process.exit(1);
  }
}

// Executa o exemplo se este arquivo for executado diretamente
if (import.meta.url === `file://${process.argv[1]}`) {
  runPatchAnalysis();
}

export default runPatchAnalysis;
