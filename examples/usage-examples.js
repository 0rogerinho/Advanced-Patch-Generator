#!/usr/bin/env node

/**
 * Exemplos de uso da nova estrutura organizada
 * 
 * Este arquivo demonstra como usar os diferentes m√≥dulos
 * do Advanced Patch Generator de forma organizada.
 */

import AdvancedPatchGenerator from '../src/index.js';
import { MetricsUtils, DisplayUtils } from '../src/utils/index.js';
import { FileValidation } from '../src/validations/index.js';
import { DEFAULT_OPTIONS, COMPRESSION_LEVELS } from '../src/constants/index.js';

console.log('üß™ Exemplos de Uso - Estrutura Organizada');
console.log('==========================================\n');

// Exemplo 1: Uso b√°sico da classe principal
async function exemploBasico() {
  console.log('üìù Exemplo 1: Uso B√°sico');
  console.log('-'.repeat(40));
  
  const patchGen = new AdvancedPatchGenerator({
    compression: 6,
    verify: true,
    showProgress: false // Desabilita progresso para este exemplo
  });
  
  console.log('‚úÖ Inst√¢ncia criada com sucesso!');
  console.log(`üìä Configura√ß√µes:`, patchGen.defaultOptions);
  console.log('');
}

// Exemplo 2: Uso dos utilit√°rios de m√©tricas
function exemploMetricas() {
  console.log('üìä Exemplo 2: Utilit√°rios de M√©tricas');
  console.log('-'.repeat(40));
  
  const bytes = 1048576; // 1MB
  const tempo = 1500; // 1.5 segundos
  
  console.log(`üìè Bytes formatados: ${MetricsUtils.formatBytes(bytes)}`);
  console.log(`‚è±Ô∏è  Tempo formatado: ${MetricsUtils.formatTime(tempo)}`);
  console.log(`üìà Taxa de compress√£o: ${MetricsUtils.calculateCompressionRatio(1000, 500)}%`);
  console.log(`üìä Barra de progresso: ${MetricsUtils.createProgressBar(75)}`);
  console.log('');
}

// Exemplo 3: Uso das valida√ß√µes
async function exemploValidacoes() {
  console.log('üîç Exemplo 3: Valida√ß√µes');
  console.log('-'.repeat(40));
  
  // Valida√ß√£o de n√≠vel de compress√£o
  const nivelValido = FileValidation.isValidCompressionLevel(5);
  const nivelInvalido = FileValidation.isValidCompressionLevel(15);
  
  console.log(`‚úÖ N√≠vel 5 v√°lido: ${nivelValido}`);
  console.log(`‚ùå N√≠vel 15 v√°lido: ${nivelInvalido}`);
  
  // Valida√ß√£o de caminho do Xdelta
  const caminhoValido = FileValidation.isValidXdeltaPath('xdelta3.exe');
  const caminhoInvalido = FileValidation.isValidXdeltaPath('');
  
  console.log(`‚úÖ Caminho v√°lido: ${caminhoValido}`);
  console.log(`‚ùå Caminho inv√°lido: ${caminhoInvalido}`);
  console.log('');
}

// Exemplo 4: Uso das constantes
function exemploConstantes() {
  console.log('‚öôÔ∏è  Exemplo 4: Constantes');
  console.log('-'.repeat(40));
  
  console.log('üìã Configura√ß√µes padr√£o:', DEFAULT_OPTIONS);
  console.log('üìä N√≠veis de compress√£o:', COMPRESSION_LEVELS);
  console.log('');
}

// Exemplo 5: Uso dos utilit√°rios de exibi√ß√£o
function exemploExibicao() {
  console.log('üé® Exemplo 5: Utilit√°rios de Exibi√ß√£o');
  console.log('-'.repeat(40));
  
  // Simula informa√ß√µes de arquivo
  const fileInfo = {
    exists: true,
    sizeFormatted: '1.5 MB',
    modified: new Date()
  };
  
  DisplayUtils.displayFileInfo('Arquivo de Teste', '/path/to/file.txt', fileInfo);
  
  // Simula progresso
  DisplayUtils.displayProgress('Processando arquivos', 50);
  
  // Simula erro
  DisplayUtils.displayError('Erro de Teste', 'Este √© um erro de exemplo', {
    arquivo: 'test.txt',
    linha: 42
  });
  
  // Simula sucesso
  DisplayUtils.displaySuccess('Opera√ß√£o Conclu√≠da', 'Todas as opera√ß√µes foram executadas com sucesso!');
  console.log('');
}

// Exemplo 6: Importa√ß√£o espec√≠fica de m√≥dulos
function exemploImportacaoEspecifica() {
  console.log('üì¶ Exemplo 6: Importa√ß√£o Espec√≠fica');
  console.log('-'.repeat(40));
  
  console.log('‚úÖ Importa√ß√£o da classe principal: AdvancedPatchGenerator');
  console.log('‚úÖ Importa√ß√£o de utilit√°rios: MetricsUtils, DisplayUtils');
  console.log('‚úÖ Importa√ß√£o de valida√ß√µes: FileValidation');
  console.log('‚úÖ Importa√ß√£o de constantes: DEFAULT_OPTIONS, COMPRESSION_LEVELS');
  console.log('');
}

// Fun√ß√£o principal
async function main() {
  try {
    await exemploBasico();
    exemploMetricas();
    await exemploValidacoes();
    exemploConstantes();
    exemploExibicao();
    exemploImportacaoEspecifica();
    
    console.log('üéâ Todos os exemplos executados com sucesso!');
    console.log('\nüí° Benef√≠cios da nova estrutura:');
    console.log('   ‚úÖ C√≥digo mais organizado e modular');
    console.log('   ‚úÖ F√°cil manuten√ß√£o e extens√£o');
    console.log('   ‚úÖ Reutiliza√ß√£o de componentes');
    console.log('   ‚úÖ Melhor testabilidade');
    console.log('   ‚úÖ Separa√ß√£o clara de responsabilidades');
    
  } catch (error) {
    console.error('‚ùå Erro durante execu√ß√£o dos exemplos:', error.message);
  }
}

// Executa os exemplos
main();
